/*
react-json v0.0.1
https://github.com/arqex/react-json
MIT: https://github.com/arqex/react-json/raw/master/LICENSE
*/
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("React"), require("Freezer"));
	else if(typeof define === 'function' && define.amd)
		define(["React", "Freezer"], factory);
	else if(typeof exports === 'object')
		exports["Json"] = factory(require("React"), require("Freezer"));
	else
		root["Json"] = factory(root["React"], root["Freezer"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tFreezer = __webpack_require__(2),\n\tobjectAssign = __webpack_require__(12),\n\tTypeProperty = __webpack_require__(3),\n\tObjectProperty = __webpack_require__(4),\n\tArrayProperty = __webpack_require__(5),\n\tStringProperty = __webpack_require__(6),\n\tBooleanProperty = __webpack_require__(7),\n\tNumberProperty = __webpack_require__(8),\n\tTextProperty = __webpack_require__(9),\n\tPasswordProperty = __webpack_require__(10),\n\tdeepSettings = __webpack_require__(11)\n;\n\n\n/**\n * The main component. It will refresh the props when the store changes.\n *\n * @param  {FreezerNode} store  Freezer node that contains a json property with the data\n * @param  {FreezerNode} original Freezer node to compare with the current data\n */\nvar Json = React.createClass({\n\n\tgetDefaultProps: function(){\n\t\treturn {\n\t\t\tdoc: {},\n\t\t\terrors: false\n\t\t};\n\t},\n\n\tchildContextTypes: {\n\t\ttypeDefaults: React.PropTypes.object\n\t},\n\n\tgetChildContext: function(){\n\t\treturn {\n\t\t\ttypeDefaults: this.state.defaults\n\t\t};\n\t},\n\n\tgetInitialState: function(){\n\t\tvar me = this,\n\t\t\tdoc = this.props.doc,\n\t\t\tlistener\n\t\t;\n\n\t\t// If it is a freezer node\n\t\tif( !doc.getListener )\n\t\t\tdoc = new Freezer( doc ).get();\n\n\t\t// Listen to changes\n\t\tdoc.getListener().on('update', function( updated ){\n\t\t\tme.setState({doc: updated});\n\n\t\t\tif( me.state.errors )\n\t\t\t\tme.getValidationErrors();\n\t\t});\n\n\t\treturn {\n\t\t\tdoc: doc,\n\t\t\tdefaults: this.createDefaults()\n\t\t};\n\t},\n\n\tcomponentWillReceiveProps: function( newProps ){\n\t\tif( !newProps.doc.getListener ){\n\t\t\tthis.setState({doc: this.state.doc.reset( newProps.doc )});\n\t\t}\n\n\t\tthis.setState( {defaults: this.createDefaults()} );\n\t},\n\n\trender: function(){\n\t\tvar definition = this.props.definition,\n\t\t\tob = React.createElement( TypeProperty, {\n\t\t\t\ttype: 'object',\n\t\t\t\tvalue: this.state.doc,\n\t\t\t\tsettings: objectAssign( {}, this.state.defaults.object, {\n\t\t\t\t\tproperties: definition.properties,\n\t\t\t\t\tediting: definition.editing,\n\t\t\t\t\textensible: definition.extensible,\n\t\t\t\t\theader: false,\n\t\t\t\t\torder: definition.order\n\t\t\t\t}),\n\t\t\t\tref: 'doc',\n\t\t\t\tdefaults: this.state.defaults\n\t\t\t})\n\t\t;\n\n\t\treturn React.DOM.div({className: \"jsonEditor\"}, ob);\n\t},\n\n\tgetValue: function(){\n\t\treturn this.state.doc.toJS();\n\t},\n\n\tgetValidationErrors: function(){\n\t\tvar jsonValue = this.getValue(),\n\t\t\terrors = this.refs.doc.getValidationErrors( jsonValue )\n\t\t;\n\n\t\tthis.setState( {errors: errors.length} );\n\t\treturn errors.length ? errors : false;\n\t},\n\tgetDeepSettings: function(){\n\t\tvar settings = {};\n\n\t\tfor( var key in deepSettings ){\n\t\t\tsettings[ key ] = deepSettings[ key ]( this, settings[key] );\n\t\t}\n\n\t\treturn settings;\n\t},\n\tcreateDefaults: function(){\n\t\tvar components = TypeProperty.prototype.components,\n\t\t\tpropDefaults = this.props.definition.defaults || {},\n\t\t\tdefaults = {}\n\t\t;\n\n\t\tfor( var type in components ){\n\t\t\tdefaults[ type ] = objectAssign( {}, components[ type ].prototype.defaults || {}, propDefaults[ type ] || {});\n\t\t}\n\n\t\treturn defaults;\n\t}\n});\n\n// Add global modifier functions\nJson.registerType = TypeProperty.registerType.bind( TypeProperty );\n\n// Register basic types\nJson.registerType( 'object', ObjectProperty );\nJson.registerType( 'array', ArrayProperty, true );\nJson.registerType( 'string', StringProperty, true );\nJson.registerType( 'text', TextProperty, true );\nJson.registerType( 'number', NumberProperty, true );\nJson.registerType( 'boolean', BooleanProperty, true );\nJson.registerType( 'password', PasswordProperty, true );\n\nmodule.exports = Json;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Json.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./Json.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22React%22?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Freezer\"\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22Freezer%22?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1),\n\tdeepSettings = __webpack_require__(11),\n\tobjectAssign = __webpack_require__(12)\n;\n\nvar components = {};\nvar typeCheckOrder = [];\n\nvar TypeProperty = React.createClass({\n\tcomponents: {},\n\ttypeCheckOrder: [],\n\n\tcontextTypes: {\n\t\ttypeDefaults: React.PropTypes.object\n\t},\n\n\trender: function() {\n\t\tvar Component = this.getComponent(),\n\t\t\tsettings = objectAssign(\n\t\t\t\t{},\n\t\t\t\tthis.context.typeDefaults[ this.props.type ],\n\t\t\t\tthis.props.settings\n\t\t\t)\n\t\t;\n\n\t\tthis.addDeepSettings( settings );\n\n\t\treturn React.createElement( Component, {\n\t\t\tvalue: this.props.value,\n\t\t\tsettings: settings,\n\t\t\tonUpdated: this.props.onUpdated,\n\t\t\tref: 'property'\n\t\t});\n\t},\n\n\tgetComponent: function(){\n\t\tvar type = this.props.type;\n\t\tif( !type )\n\t\t\ttype = this.guessType( this.props.value );\n\n\t\tthis.propertyType = type;\n\n\t\treturn this.components[ type ];\n\t},\n\n\tguessType: function( value ){\n\t\tvar type = false,\n\t\t\ti = 0,\n\t\t\ttypes = this.typeCheckOrder\n\t\t;\n\n\t\twhile( !type && i < types.length ){\n\t\t\tif( this.components[ types[i] ].prototype.isType( value ) )\n\t\t\t\ttype = types[i++];\n\t\t\telse\n\t\t\t\ti++;\n\t\t}\n\n\t\treturn type || 'object';\n\t},\n\n\tgetValidationErrors: function( jsonValue ){\n\t\treturn this.refs.property.getValidationErrors( jsonValue );\n\t},\n\n\taddDeepSettings: function( settings ){\n\t\tvar parentSettings = this.props.parentSettings || {},\n\t\t\tdeep\n\t\t;\n\n\t\tfor( var key in deepSettings ){\n\t\t\tdeep = deepSettings[ key ]( parentSettings[key], settings[key] );\n\t\t\tif( typeof deep != 'undefined' )\n\t\t\t\tsettings[ key ] = deep;\n\t\t}\n \t}\n});\n\nTypeProperty.registerType = function( name, Component, selectable ){\n\tvar proto = TypeProperty.prototype;\n\tproto.components[ name ] = Component;\n\tif( selectable )\n\t\tproto.typeCheckOrder.unshift( name );\n};\n\nmodule.exports = TypeProperty;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./TypeProperty.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./TypeProperty.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1),\n\tProperty = __webpack_require__(13),\n\tassign = __webpack_require__(12),\n\tCompoundPropertyMixin = __webpack_require__(14)\n;\n\n/**\n * Component for editing a hash.\n * @param  {FreezerNode} value The value of the object.\n * @param  {Mixed} original The value of the component it the original json.\n */\nvar ObjectProperty = React.createClass({\n\tmixins: [CompoundPropertyMixin],\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\tgetStateFromProps: function( props ){\n\t\treturn {\n\t\t\tediting: props.settings.editing || false,\n\t\t\tproperties: assign({}, props.settings && props.settings.properties || {})\n\t\t};\n\t},\n\n\tdefaultValue: {},\n\n\trender: function(){\n\t\tvar me = this,\n\t\t\tsettings = this.props.settings,\n\t\t\tclassName = this.state.editing || settings.header === false ? 'open jsonObject jsonCompound' : 'jsonObject jsonCompound',\n\t\t\topenHash = '',\n\t\t\tdefinitions = this.state.properties,\n\t\t\tattrs = [],\n\t\t\tvalue = assign({}, this.props.value ),\n\t\t\tdefinition\n\t\t;\n\n\t\tthis.getPropertyOrder().forEach( function( propertyName ){\n\t\t\tattrs.push( me.renderProperty( propertyName ));\n\t\t});\n\n\t\tvar openHashChildren = [ attrs ];\n\t\tif( settings.adder !== false ){\n\t\t\topenHashChildren.push( this.renderAdder() );\n\t\t}\n\n\t\topenHash = React.DOM.div({ key: 'o', className: 'jsonChildren'}, openHashChildren);\n\t\treturn React.DOM.span({className: className}, [\n\t\t\tthis.renderHeader(),\n\t\t\topenHash\n\t\t]);\n\t},\n\n\trenderProperty: function( key ){\n\t\tvar value = this.props.value[ key ],\n\t\t\tdefinition = this.state.properties[ key ] || {}\n\t\t;\n\n\t\tif( !definition.settings )\n\t\t\tdefinition.settings = {};\n\n\t\treturn React.createElement( Property, {\n\t\t\tvalue: value,\n\t\t\tkey: key,\n\t\t\tname: key,\n\t\t\tref: key,\n\t\t\tdefinition: definition,\n\t\t\tonUpdated: this.updateProperty,\n\t\t\tonDeleted: this.deleteProperty,\n\t\t\tparentSettings: this.props.settings\n\t\t});\n\t},\n\n\tgetDefaultHeader: function(){\n\t\treturn 'Map [' + Object.keys( this.props.value ) + ']';\n\t},\n\n\tgetDefaultAdder: function(){\n\t\treturn '+ Add property';\n\t},\n\n\tupdateProperty: function( key, value ){\n\t\tthis.checkEditingSetting( key );\n\t\tthis.props.value.set( key, value );\n\t},\n\n\tdeleteProperty: function( key ){\n\t\tthis.props.value.remove( key );\n\t},\n\n\tgetValidationErrors: function( jsonValue ){\n\t\tvar me = this,\n\t\t\terrors = [],\n\t\t\tattrs = Object.keys( this.refs )\n\t\t;\n\n\t\tattrs.forEach( function( attr ){\n\t\t\tvar error = me.refs[attr].getValidationErrors();\n\t\t\tif( error )\n\t\t\t\terrors = errors.concat( error );\n\t\t});\n\n\t\treturn errors;\n\t},\n\n\tgetPropertyOrder: function(){\n\t\tvar settingsOrder = this.props.settings.order,\n\t\t\torderType = typeof settingsOrder\n\t\t;\n\n\t\tif( !settingsOrder || (orderType != 'function' && settingsOrder.constructor !== Array) )\n\t\t\treturn Object.keys( this.props.value );\n\n\t\tvar value = assign( {}, this.props.value ),\n\t\t\torder = []\n\t\t;\n\n\t\tif( orderType == 'function' )\n\t\t\treturn settingsOrder( value );\n\n\t\t// Add properties in the array\n\t\tif( settingsOrder.constructor === Array ){\n\t\t\tsettingsOrder.forEach( function( name ){\n\t\t\t\tif( typeof value[ name ] != 'undefined' ){\n\t\t\t\t\torder.push( name );\n\n\t\t\t\t\t// Delete them from current values\n\t\t\t\t\tdelete value[ name ];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add the keys left in the value\n\t\tfor( var key in value ){\n\t\t\tif( order.indexOf( key ) == -1 )\n\t\t\t\torder.push( key );\n\t\t}\n\n\t\treturn order;\n\t}\n});\n\nmodule.exports = ObjectProperty;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/ObjectProperty.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/ObjectProperty.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1),\n\tProperty = __webpack_require__(13),\n\tassign = __webpack_require__(12),\n\tCompoundPropertyMixin = __webpack_require__(14)\n;\n\n/**\n * Component for editing an array.\n * @param  {FreezerNode} value The value of the array.\n * @param  {Mixed} original The value of the component it the original json.\n */\nvar ArrayProperty = React.createClass({\n\tmixins: [CompoundPropertyMixin],\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\tgetStateFromProps: function( props ){\n\t\treturn {\n\t\t\tediting: props.settings.editing || false,\n\t\t\tproperties: this.state && this.state.properties || {}\n\t\t};\n\t},\n\n\tdefaultValue: [],\n\n\trender: function(){\n\t\tvar settings = this.props.settings,\n\t\t\tclassName = this.state.editing ? 'open jsonArray jsonCompound' : 'jsonArray jsonCompound',\n\t\t\topenArray = '',\n\t\t\tdefinitions = this.state.properties\n\t\t;\n\n\t\tvar attrs = [],\n\t\t\tdefinition\n\t\t;\n\t\tfor (var i = 0; i < this.props.value.length; i++) {\n\t\t\tdefinition = definitions[ i ] || {};\n\t\t\tif( !definition.settings )\n\t\t\t\tdefinition.settings = {};\n\n\t\t\tattrs.push( React.createElement( Property, {\n\t\t\t\tvalue: this.props.value[i],\n\t\t\t\tkey: i,\n\t\t\t\tname: i,\n\t\t\t\tdefinition: definition,\n\t\t\t\tonUpdated: this.updateProperty,\n\t\t\t\tonDeleted: this.deleteProperty,\n\t\t\t\tparentSettings: this.props.settings\n\t\t\t}));\n\t\t}\n\n\t\tvar openArrayChildren = [ attrs ];\n\t\tif( settings.adder !== false ){\n\t\t\topenArrayChildren.push( this.renderAdder( this.props.value.length ) );\n\t\t}\n\n\t\topenArray = React.DOM.div({ key:'o', className: 'jsonChildren' }, openArrayChildren );\n\n\t\treturn React.DOM.span({className: className}, [\n\t\t\tthis.renderHeader(),\n\t\t\topenArray\n\t\t]);\n\t},\n\n\tgetDefaultHeader: function(){\n\t\treturn 'List [' + this.props.value.length + ']';\n\t},\n\n\tgetDefaultAdder: function(){\n\t\treturn '+ Add element';\n\t},\n\n\tupdateProperty: function( key, value ){\n\t\tthis.checkEditingSetting( key );\n\t\tthis.props.value.set( key, value );\n\t},\n\n\tdeleteProperty: function( key ){\n\t\tvar properties = {};\n\n\t\tfor( var index in this.state.properties ){\n\t\t\tif( index > key ){\n\t\t\t\tproperties[ index - 1 ] = this.state.properties[ index ];\n\t\t\t}\n\t\t\telse if( index < key ){\n\t\t\t\tproperties[ index ] = this.state.properties[ index ];\n\t\t\t}\n\t\t\t// If they are equal we are deleting the element, do nothing\n\t\t}\n\n\t\tthis.props.value.splice( key, 1 );\n\t\tthis.setState( { properties: properties } );\n\t},\n\n\tisType: function( value ){\n\t\treturn value && value.constructor == Array;\n\t}\n});\n\nmodule.exports = ArrayProperty;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/ArrayProperty.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/ArrayProperty.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tLeafMixin = __webpack_require__(15)\n;\n\n\n/**\n * Component for editing a string.\n * @param  {string} value The value of the string.\n * @param  {Mixed} original The value of the component it the original json.\n * @param {FreezerNode} parent The parent node to let the string component update its value.\n */\nvar StringAttribute = React.createClass({\n\tmixins: [LeafMixin],\n\ttypeClass: 'jsonString',\n\tinputType: 'text',\n\tdefaultValue: '',\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\trender: function(){\n\t\treturn this.renderInput();\n\t},\n\n\tupdateValue: function( e ){\n\t\tthis.setState({ value: e.target.value });\n\t},\n\n\tisType: function( value ){\n\t\treturn typeof value != 'object';\n\t}\n});\n\nmodule.exports = StringAttribute;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/StringProperty.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/StringProperty.js?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1);\n\n/**\n * Component for editing a boolean.\n * @param  {string} value The value of the boolean.\n */\nvar BooleanAttribute = React.createClass({\n\n\tdefaultValue: false,\n\n\trender: function(){\n\t\tvar className = 'jsonBoolean';\n\n\t\treturn React.DOM.input({\n\t\t\ttype: \"checkbox\",\n\t\t\tclassName: className,\n\t\t\tchecked: this.props.value,\n\t\t\tonChange: this.updateValue\n\t\t});\n\t},\n\n\tsetValue: function(){\n\t\tthis.setState({editing: false});\n\t\tthis.props.onUpdated( this.state.value );\n\t},\n\n\tupdateValue: function( e ){\n\t\tthis.props.onUpdated( e.target.checked );\n\t},\n\n\tisType: function( value ){\n\t\treturn typeof value == 'boolean';\n\t},\n\n\tcomponentWillReceiveProps: function( nextProps ){\n\t\tif( this.props.value != nextProps.value )\n\t\t\tthis.setState( { value: nextProps.value } );\n\t}\n});\n\nmodule.exports = BooleanAttribute;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/BooleanProperty.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/BooleanProperty.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tLeafMixin = __webpack_require__(15)\n;\n\n/**\n * Component for editing a number.\n * @param  {string} value The value of the string.\n * @param  {Mixed} original The value of the component it the original json.\n * @param {FreezerNode} parent The parent node to let the string component update its value.\n */\nvar NumberAttribute = React.createClass({\n\tmixins: [LeafMixin],\n\ttypeClass: 'jsonNumber',\n\tinputType: 'number',\n\tdefaultValue: '',\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\trender: function(){\n\t\treturn this.renderInput();\n\t},\n\n\tupdateValue: function( e ){\n\t\tthis.setState({ value: parseFloat( e.target.value ) });\n\t},\n\n\tisType: function( value ){\n\t\treturn typeof value == 'number';\n\t}\n});\n\nmodule.exports = NumberAttribute;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/NumberProperty.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/NumberProperty.js?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tLeafMixin = __webpack_require__(15)\n;\n\n/**\n * Component for editing a string.\n * @param  {string} value The value of the string.\n * @param  {Mixed} original The value of the component it the original json.\n * @param {FreezerNode} parent The parent node to let the string component update its value.\n */\nvar TextAttribute = React.createClass({\n\tmixins: [LeafMixin],\n\tdefaultValue: '',\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\trender: function(){\n\t\tvar className = 'jsonText';\n\n\t\tif( !this.state.editing )\n\t\t\treturn React.DOM.span( {onClick: this.setEditMode, className: className}, this.props.value );\n\n\t\treturn React.DOM.textarea({\n\t\t\tvalue: this.state.value,\n\t\t\tonChange: this.updateValue,\n\t\t\tplaceholder: this.props.settings.placeholder || '',\n\t\t\tonBlur: this.setValue,\n\t\t\tref: 'input'\n\t\t});\n\t},\n\n\tupdateValue: function( e ){\n\t\tthis.setState({ value: e.target.value });\n\t},\n\n\tisType: function( value ){\n\t\treturn typeof value == 'string' && value.length > 100;\n\t}\n});\n\nmodule.exports = TextAttribute;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/TextProperty.js\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/TextProperty.js?");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tLeafMixin = __webpack_require__(15)\n;\n\n\n/**\n * Component for editing a password.\n * @param  {string} value The value of the password.\n * @param  {Mixed} original The value of the component it the original json.\n * @param {FreezerNode} parent The parent node to let the password component update its value.\n */\nvar PasswordAttribute = React.createClass({\n\tmixins: [LeafMixin],\n\ttypeClass: 'jsonPassword',\n\tinputType: 'password',\n\tdefaultValue: '',\n\n\tgetInitialState: function(){\n\t\treturn this.getStateFromProps( this.props );\n\t},\n\n\trender: function(){\n\t\treturn this.renderInput();\n\t},\n\n\tgetDisplayModeString: function(){\n\t\treturn this.getWildcards();\n\t},\n\n\tgetWildcards: function(){\n\t\tvar out = '';\n\t\tfor (var i = this.state.value.length - 1; i >= 0; i--) {\n\t\t\tout += '*';\n\t\t}\n\t\treturn out;\n\t},\n\n\tisType: function(){\n\t\treturn false;\n\t},\n\n\tupdateValue: function( e ){\n\t\tthis.setState({ value: e.target.value });\n\t}\n});\n\nmodule.exports = PasswordAttribute;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/PasswordProperty.js\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./types/PasswordProperty.js?");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = {\n\tediting: function( parentValue, value ){\n\t\tif( typeof value != 'undefined' )\n\t\t\treturn value;\n\n\t\tif( parentValue == 'always' )\n\t\t\treturn 'always';\n\n\t\t// else return undefined: do not override\n\t},\n\tadder: function( parentValue, value ){\n\n\t\tif( typeof value != 'undefined' )\n\t\t\treturn value;\n\t\tif( typeof parentValue != 'undefined' )\n\t\t\treturn parentValue;\n\n\t\treturn true;\n\t}\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./deepSettings.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./deepSettings.js?");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/object-assign/index.js?");

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1),\n\tobjectAssign = __webpack_require__(12),\n\tValidation = __webpack_require__(17),\n\tTypeProperty = __webpack_require__(3)\n;\n\n/**\n * Property component that represent each Array element or Object property.\n * @param  {string} name The key of the attribute in the parent.\n * @param  {Mixed} value The value of the attribute.\n * @param {Mixed} original The value of the attibute in the original json to highlight the changes.\n * @param {FreezerNode} parent The parent node to notify attribute updates.\n */\nvar Property = React.createClass({\n\n\tgetInitialState: function(){\n\t\treturn {error: false};\n\t},\n\tgetDefaultProps: function(){\n\t\treturn {\n\t\t\tdefinition: {}\n\t\t};\n\t},\n\trender: function(){\n\t\tvar definition = this.props.definition || {},\n\t\t\tclassName = 'jsonProperty',\n\t\t\ttype = definition.type || TypeProperty.prototype.guessType( this.props.value ),\n\t\t\ttypeProperty = this.renderTypeProperty( type ),\n\t\t\terror = ''\n\t\t;\n\n\t\tclassName += ' ' + type + 'Property';\n\n\t\tif( this.state.error ){\n\t\t\tclassName += ' jsonError';\n\t\t\terror = React.DOM.span({ key:'e', className: 'jsonErrorMsg' }, this.state.error );\n\t\t}\n\n\t\treturn React.DOM.div({className: className}, [\n\t\t\tReact.DOM.span( {className: 'jsonName', key: 'n'}, [\n\t\t\t\tReact.DOM.a({ key:'a', href: '#', className: 'jsonRemove', onClick: this.handleRemove}, 'x'),\n\t\t\t\tReact.DOM.span({ key: 's1' }, (definition.title || this.props.name) + ':' )\n\t\t\t]),\n\t\t\tReact.DOM.span( {className: 'jsonValue', key: 'v'}, [\n\t\t\t\tReact.DOM.span({key:'s2'}, typeProperty )\n\t\t\t]),\n\t\t\terror\n\t\t]);\n\t},\n\n\trenderTypeProperty: function( type ){\n\t\tvar definition = this.props.definition || {},\n\t\t\tsettings = objectAssign( {}, definition.settings || {} ),\n\t\t\tcomponent\n\t\t;\n\n\t\tif( definition.properties )\n\t\t\tsettings.properties = definition.properties;\n\n\t\tcomponent = React.createElement( TypeProperty, {\n\t\t\ttype: type,\n\t\t\tvalue: this.props.value,\n\t\t\tsettings: settings,\n\t\t\tonUpdated: this.onUpdated,\n\t\t\tref: 'typeProperty',\n\t\t\tparentSettings: this.props.parentSettings\n\t\t});\n\t\treturn component;\n\t},\n\n\thandleRemove: function( e ){\n\t\tthis.props.onDeleted( this.props.name );\n\t},\n\n\tshouldComponentUpdate: function( nextProps, nextState ){\n\t\treturn nextProps.value != this.props.value || nextState.error != this.state.error;\n\t},\n\n\tonUpdated: function( value ){\n\t\tthis.props.onUpdated( this.props.name, value );\n\t},\n\n\tgetValidationErrors: function( jsonValue ){\n\t\tvar childErrors = [],\n\t\t\tvalidates = this.props.definition.validates,\n\t\t\tname = this.props.name,\n\t\t\tproperty = this.refs.typeProperty\n\t\t;\n\n\t\tif( property.propertyType == 'object' ){\n\t\t\tchildErrors = property.getValidationErrors( jsonValue );\n\t\t\tchildErrors.forEach( function( error ){\n\t\t\t\tif( !error.path )\n\t\t\t\t\terror.path = name;\n\t\t\t\telse\n\t\t\t\t\terror.path = name + '.' + error.path;\n\t\t\t});\n\t\t}\n\n\t\tif( !validates )\n\t\t\treturn childErrors;\n\n\n\t\tvar error = Validation.getValidationError( this.props.value, jsonValue, validates ),\n\t\t\tmessage\n\t\t;\n\n\t\tif( error ){\n\t\t\tmessage = this.props.definition.errorMessage;\n\t\t\tif( !message )\n\t\t\t\tmessage = ( this.props.definition.title || this.props.name ) + ' value is not valid.';\n\n\t\t\terror.path = name;\n\t\t\terror.message = message;\n\t\t\tthis.setState( {error: message} );\n\t\t\tchildErrors = childErrors.concat( [error] );\n\t\t}\n\t\telse if( this.state.error ){\n\t\t\tthis.setState( {error: false} );\n\t\t}\n\n\t\treturn childErrors;\n\t}\n});\n\nmodule.exports = Property;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Property.js\n ** module id = 13\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./Property.js?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1),\n\tPropertyAdder = __webpack_require__(16),\n\tassign = __webpack_require__(12)\n;\n\nmodule.exports = {\n\trenderHeader: function(){\n\t\tvar settingsHeader = this.props.settings.header;\n\t\tif( settingsHeader === false )\n\t\t\treturn '';\n\n\t\tvar type = typeof settingsHeader,\n\t\t\theader\n\t\t;\n\n\t\tif( type == 'function' ){\n\t\t\theader = settingsHeader( this.props.value.toJS() );\n\t\t}\n\t\telse if( type == 'undefined' ){\n\t\t\theader = this.getDefaultHeader();\n\t\t}\n\t\telse {\n\t\t\theader = settingsHeader;\n\t\t}\n\n\t\treturn React.DOM.span({ key: 's', onClick: this.toggleEditing, className: 'compoundToggle' }, header);\n\t},\n\n\ttoggleEditing: function(){\n\t\tif( this.state.editing != 'always' && this.props.settings.header !== false )\n\t\t\tthis.setState({editing: !this.state.editing});\n\t},\n\n\tcomponentWillReceiveProps: function( nextProps ){\n\t\tif( this.props.settings.editing != nextProps.settings.editing )\n\t\t\tthis.setState({ editing: nextProps.editing });\n\t},\n\n\trenderAdder: function( name ){\n\t\tvar settingsAdder = this.props.settings.adder,\n\t\t\ttype = typeof settingsAdder,\n\t\t\tadder\n\t\t;\n\n\t\tif( type == 'function' ){\n\t\t\tadder = settingsAdder( this.props.value.toJS() );\n\t\t}\n\t\telse if( settingsAdder === true || type == 'undefined' ){\n\t\t\tadder = this.getDefaultAdder();\n\t\t}\n\t\telse {\n\t\t\tadder = settingsAdder;\n\t\t}\n\n\t\treturn React.createElement( PropertyAdder, {\n\t\t\tonCreate: this.createProperty,\n\t\t\tname: name,\n\t\t\tkey: 'add',\n\t\t\ttext: adder\n\t\t});\n\t},\n\n\tcreateProperty: function( key, value, definition ){\n\n\t\tif( this.props.value[ key ] )\n\t\t\treturn console.log( 'Property ' + key + ' already exists.');\n\n\t\t// Start editing\n\t\tdefinition.settings = {editing: this.state.editing == 'always' ? 'always' : true };\n\n\t\tvar properties = assign( {}, this.state.properties );\n\t\tproperties[ key ] = definition;\n\n\t\tthis.setState({properties: properties});\n\t\tthis.props.value.set( key, value );\n\t},\n\n\t/**\n\t * Checks if the current key editing setting is true\n\t * and set it to false. The editing setting is set\n\t * to true when a new child is added to edit it automatically\n\t * after is edited it loses the point.\n\t *\n\t * @param  {String} key The child key\n\t */\n\tcheckEditingSetting: function( key ){\n\t\tvar properties = this.state.properties;\n\t\tif( properties[ key ] && properties[ key ].settings.editing === true ){\n\t\t\tproperties = assign({}, properties);\n\t\t\tproperties[key].settings.editing = false;\n\t\t\tthis.setState( {properties: properties} );\n\t\t}\n\t}\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./mixins/CompoundPropertyMixin.js\n ** module id = 14\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./mixins/CompoundPropertyMixin.js?");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1);\n\nmodule.exports = {\n\tgetStateFromProps: function( props ){\n\t\treturn {\n\t\t\tediting: props.settings.editing || false,\n\t\t\tvalue: props.value\n\t\t};\n\t},\n\n\trenderInput: function(){\n\t\tvar className = this.typeClass;\n\n\t\tif( !this.state.editing )\n\t\t\treturn React.DOM.span( {onClick: this.setEditMode, className: className}, this.getDisplayString() );\n\n\t\treturn React.DOM.input({\n\t\t\ttype: this.inputType,\n\t\t\tvalue: this.state.value,\n\t\t\tplaceholder: this.props.settings.placeholder || '',\n\t\t\tonChange: this.updateValue,\n\t\t\tonBlur: this.setValue,\n\t\t\tref: 'input',\n\t\t\tonKeyDown: this.handleKeyDown\n\t\t});\n\t},\n\n\tgetDisplayString: function(){\n\t\tif( this.getDisplayModeString )\n\t\t\treturn this.getDisplayModeString();\n\t\treturn this.props.value;\n\t},\n\n\tcomponentWillReceiveProps: function( nextProps ){\n\t\tif( this.props.value != nextProps.value )\n\t\t\tthis.setState( { value: nextProps.value } );\n\t\telse if( this.props.settings.editing != nextProps.settings.editing )\n\t\t\tthis.setState({ editing: nextProps.editing });\n\t},\n\n\tcomponentDidUpdate: function( prevProps, prevState ){\n\t\tif( this.state.editing && ! prevState.editing ){\n\t\t\tthis.focus();\n\t\t}\n\t},\n\n\tcomponentDidMount: function(){\n\t\tif( this.state.editing )\n\t\t\tthis.focus();\n\t},\n\n\tsetEditMode: function(){\n\t\tthis.setState({editing: true});\n\t},\n\n\tsetValue: function(){\n\t\tif( this.state.editing != 'always' )\n\t\t\tthis.setState({editing: false});\n\t\tthis.props.onUpdated( this.state.value );\n\t},\n\n\ttoggleEditing: function(){\n\t\tthis.setState({ editing: !this.state.editing });\n\t},\n\n\thandleKeyDown: function( e ){\n\t\tif( e.which == 13 )\n\t\t\tthis.setValue();\n\t},\n\n\tfocus: function(){\n\t\tvar node = this.refs.input.getDOMNode();\n\t\tnode.focus();\n\t\tnode.value = node.value;\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./mixins/LeafPropertyMixin.js\n ** module id = 15\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./mixins/LeafPropertyMixin.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("var React = __webpack_require__(1),\n\tTypeProperty = __webpack_require__(3)\n;\n\n/**\n * Component to add properties to a Hash or Array.\n * @param  {FreezerNode} root The parent to add the attribute.\n * @param  {string} name Optional. If provided, the attribute added will have that key (arrays).\n *                           Otherwise an input will be shown to let the user define the key.\n */\nvar PropertyAdder = React.createClass({\n\tgetInitialState: function(){\n\t\treturn {\n\t\t\tcreating: this.props.creating || false,\n\t\t\tname: this.props.name,\n\t\t\ttype: 'string'\n\t\t};\n\t},\n\n\trender: function(){\n\t\tif( !this.state.creating )\n\t\t\treturn React.DOM.a({ className: 'jsonAdd', href: '#', onClick: this.handleCreate }, this.props.text );\n\n\t\tvar options = this.getTypes().map( function( type ){\n\t\t\t\treturn React.DOM.option({value: type, key: type}, type[0].toUpperCase() + type.slice(1));\n\t\t\t}),\n\t\t\tpropertyName\n\t\t;\n\n\t\tif( typeof this.props.name != 'undefined' )\n\t\t\tpropertyName =  [\n\t\t\t\tReact.DOM.span({className: 'jsonName'}, this.props.name),\n\t\t\t\tReact.DOM.span(null, ':')\n\t\t\t];\n\t\telse {\n\t\t\tpropertyName = [\n\t\t\t\tReact.DOM.input({ref: 'keyInput', type: 'text', value: this.state.value, onChange: this.changeKey}),\n\t\t\t\tReact.DOM.span(null, ':')\n\t\t\t];\n\t\t}\n\n\t\treturn React.DOM.div( {className: 'jsonProperty jsonPropertyAdder'}, [\n\t\t\tpropertyName,\n\t\t\tReact.DOM.select({ key: 's', value: this.state.type, onChange: this.changeType, ref: 'typeSelector'}, options),\n\t\t\tReact.DOM.button({ key: 'b', onClick: this.createProperty }, 'OK' ),\n\t\t\tReact.DOM.a({ key: 'a', href: '#', className: 'cancelProperty', onClick: this.handleCancel}, 'Cancel')\n\t\t]);\n\t},\n\n\tcomponentDidUpdate: function( prevProps, prevState ){\n\t\tif( !prevState.creating && this.state.creating ){\n\t\t\tif( this.refs.keyInput )\n\t\t\t\tthis.refs.keyInput.getDOMNode().focus();\n\t\t\telse\n\t\t\t\tthis.refs.typeSelector.getDOMNode().focus();\n\t\t}\n\t},\n\n\tcomponentWillReceiveProps: function( newProps ){\n\t\tthis.setState({name: newProps.name});\n\t},\n\n\thandleCreate: function( e ){\n\t\te.preventDefault();\n\t\tthis.setState({creating: true});\n\t},\n\n\thandleCancel: function( e ){\n\t\te.preventDefault();\n\t\tthis.setState({creating: false});\n\t},\n\n\tchangeType: function( e ){\n\t\tthis.setState({type: e.target.value});\n\t},\n\n\tchangeKey: function( e ){\n\t\tthis.setState({name: e.target.value});\n\t},\n\n\tcreateProperty: function(){\n\t\tthis.setState({creating: false});\n\n\t\tvar value = TypeProperty.prototype.components[ this.state.type ].prototype.defaultValue;\n\n\t\tthis.props.onCreate( this.state.name, value, {type: this.state.type });\n\t},\n\n\tgetTypes: function(){\n\t\treturn Object.keys( TypeProperty.prototype.components );\n\t}\n});\n\nmodule.exports = PropertyAdder;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./PropertyAdder.js\n ** module id = 16\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./PropertyAdder.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar ValidationMethods = {\n  required: function( value ){\n      if( !value )\n          return false;\n\n      // Empty trimmed string does not validate\n      if( typeof value == 'string' && !value.trim() )\n          return false;\n\n      return true;\n  },\n\n  email: function( value ){\n\n      // If nothing given, maybe the field is not required\n      // so it passes the check.\n      if( !value )\n          return true;\n\n      /* http://stackoverflow.com/questions/46155/validate-email-address-in-javascript */\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test( value );\n  },\n\n  length: function( value, jsonValue, min, max ){\n      if( !min )\n          min = 0;\n      if( !max )\n          max = Infinity;\n\n      return ( value.length >= min && value.length <= max );\n  },\n\n  integer: function( value, jsonValue, min, max ){\n      if( !min && min !== 0 )\n          min = -Infinity;\n      if( !max )\n          max = Infinity;\n\n      // Empty string passes the check\n      if(!value && value != 0)\n          return true;\n\n      var intVal = parseInt( value );\n\n      if( value != intVal )\n          return false;\n\n      return ( intVal <= max && intVal >= min );\n  },\n\n  checked: function( value ){\n      return value;\n  },\n\n  matches: function( value, jsonValue, path ){\n      return value == findInTree( path.split('.'), jsonValue );\n  }\n};\n\n\nmodule.exports = {\n\tgetValidationError: function( value, jsonValue, validates ){\n\t\tvar methods = [],\n\t\t\terror = false,\n\t\t\ti = 0\n\t\t;\n\n\t\t// Store the validation methods in an array\n\t\tif( typeof validates == 'string' ){\n\t\t\tmethods = parseMethodString( validates );\n\t\t}\n\t\telse if( typeof validates == 'function' ){\n\t\t\tmethods = [ validates ];\n\t\t}\n\t\telse if( validates && validates.constructor === Array ){\n\t\t\tmethods = validates;\n\t\t}\n\n\n\t\tvar definition, f, method;\n\t\twhile( !error && i < methods.length ){\n\t\t\tmethod = methods[i++];\n\t\t\tif( typeof method == 'string' ){\n\n\t\t\t\t// definition {name, args}\n\t\t\t\tdefinition = parseMethodName( method );\n\t\t\t\tf = ValidationMethods[ definition.name ];\n\t\t\t\tif( !f )\n\t\t\t\t\tconsole.log( 'Unkown validation method ' + definition.name );\n\t\t\t\telse if( !f.apply( null, [ value, jsonValue ].concat( definition.args ) )){\n\t\t\t\t\terror = {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tmethod: method\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( typeof method == 'function' ){\n\t\t\t\tif( !method( value, jsonValue ) )\n\t\t\t\t\terror = {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tmethod: 'custom'\n\t\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn error;\n\t}\n};\n\n/*\n HELPER METHODS\n */\n\nvar parseMethodString = function( string ){\n\treturn string.match(/[^\\s\\[]+(\\[[^\\]]+?\\])?/ig);\n};\n\n/**\n * Parse a method call in the data-validation attribute.\n * @param  {String} methodStr A method call like method[arg1, arg2, ...]\n * @return {Object}           An object like {name: 'method', args: [arg1, arg2, ...]}\n */\nvar parseMethodName = function( methodStr ){\n    var parts = methodStr.split('['),\n        definition = {\n            name: parts[0],\n            args: []\n        },\n        args\n    ;\n\n    if( parts.length > 1 ){\n        args = parts[1];\n\n        if( args[ args.length - 1 ] == ']' )\n            args = args.slice(0, args.length - 1);\n\n        definition.args = args.split(/\\s*,\\s*/);\n    }\n\n    return definition;\n};\n\n/**\n * Get the value of a field node, hiding the differences among\n * different type of inputs.\n *\n * @param  {DOMElement} field The field.\n * @return {String}       The current value of the given field.\n */\nvar getFieldValue = function( field ){\n    var tagName = field.tagName.toLowerCase();\n\n    if( tagName == 'input' && field.type == 'checkbox' ){\n        return field.checked;\n    }\n\n    if( tagName == 'select' ){\n        return field.options[field.selectedIndex].value;\n    }\n\n    return field.value;\n};\n\nfunction findInTree( path, jsonValue ){\n\tif( !path.length )\n\t\treturn jsonValue;\n\n\treturn findInTree(path.slice(1), jsonValue[ path[0] ]);\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./validation.js\n ** module id = 17\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./validation.js?");

/***/ }
/******/ ])
});
;